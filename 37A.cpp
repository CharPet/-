#include <stdio.h> 

// Συνάρτηση για την ταξινόμηση του πίνακα με την τεχνική Selection Sort
void selectionSort(int array[], int length) {

	// Εξωτερικός βρόχος που επαναλαμβάνεται για κάθε στοιχείο του πίνακα
	for (int i = 0; i < length - 1; i++) {

		// Θεωρούμε ότι το στοιχείο στη θέση i είναι το μικρότερο (minPos)
		int minPos = i;

		// Εσωτερικός βρόχος που ψάχνει το μικρότερο στοιχείο στο υπόλοιπο του πίνακα
		for (int j = i + 1; j < length; j++) {
			if (array[j] < array[minPos]) { // Εάν βρεθεί μικρότερο στοιχείο
				minPos = j; // Ενημερώνουμε το minPos με τη νέα θέση
			}
		}

		// Εάν βρεθεί νέο μικρότερο στοιχείο, το ανταλλάσσουμε με το στοιχείο στη θέση i
		if (minPos != i) {
			int temp = array[i]; // Αποθηκεύουμε προσωρινά το στοιχείο στη θέση i
			array[i] = array[minPos]; // Αντικαθιστούμε το στοιχείο στη θέση i με το μικρότερο στοιχείο
			array[minPos] = temp; // Τοποθετούμε το αρχικό στοιχείο στη θέση του μικρότερου
		}
	}
}

// Συνάρτηση main για την εκτέλεση του προγράμματος
int main() {

	int array[] = { 6, 7, 9, 3, 5, 8 }; // Ο αρχικός πίνακας
	int length = sizeof(array) / sizeof(array[0]); // Υπολογίζουμε το μήκος του πίνακα

	selectionSort(array, length); // Καλούμε τη συνάρτηση για την ταξινόμηση

	// Εκτυπώνουμε τον ταξινομημένο πίνακα
	for (int i = 0; i < length; i++) {
		printf("a[%d] = %d\n", i, array[i]); // Εκτυπώνει κάθε στοιχείο του πίνακα
	}

	return 0; // Το πρόγραμμα ολοκληρώθηκε επιτυχώς
}
